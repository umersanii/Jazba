package jazba;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

public class createWorkoutPresetDAO {

    private static final String DB_URL = "jdbc:mysql://localhost:3306/JazbaDB";
    private static final String DB_USERNAME = "root";
    private static final String DB_PASSWORD = "2cool4skool";
    
    // Method to fetch exercises from database (unchanged)
    public static List<Exercise> fetchExercisesFromDatabase() {
        List<Exercise> exercises = new ArrayList<>();
        String query = "SELECT name, muscleGroups, description, equipment, difficulty, instructions, sets, reps, weight FROM exercise"; // Fetching relevant columns

        try (Connection connection = DriverManager.getConnection(DB_URL, DB_USERNAME, DB_PASSWORD);
             PreparedStatement statement = connection.prepareStatement(query);
             ResultSet resultSet = statement.executeQuery()) {

            while (resultSet.next()) {
                String name = resultSet.getString("name");
                String muscleGroups = resultSet.getString("muscleGroups");
                String description = resultSet.getString("description");
                String equipment = resultSet.getString("equipment");
                int difficulty = resultSet.getInt("difficulty");
                String instructions = resultSet.getString("instructions");
                int sets = resultSet.getInt("sets");
                int reps = resultSet.getInt("reps");
                double weight = resultSet.getDouble("weight");

                // Create Exercise object
                Exercise exercise = new Exercise(name, muscleGroups, description, equipment, difficulty, instructions, sets, reps, weight);
                exercises.add(exercise);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }

        return exercises;
    }

    // Method to save workout preset
    public int saveWorkoutPreset(String workoutName, int memberID) {
        String sqlInsertPreset = "INSERT INTO workoutpreset (name, memberID) VALUES (?, ?)";
        
        // Variable to store the generated workoutPresetId
        int workoutPresetId = -1;
        
        try (Connection connection = DriverManager.getConnection(DB_URL, DB_USERNAME, DB_PASSWORD);
             PreparedStatement stmtInsertPreset = connection.prepareStatement(sqlInsertPreset, Statement.RETURN_GENERATED_KEYS)) {
            
            // Set parameters for inserting the workout preset
            stmtInsertPreset.setString(1, workoutName);       // Workout Name     // Exercises (can be stored as a comma-separated list)
            stmtInsertPreset.setInt(2, memberID);             // Member ID (User ID of the logged-in user)
    
            // Execute the query and check if insertion is successful
            int rowsInserted = stmtInsertPreset.executeUpdate();
    
            // Retrieve the generated workoutPresetId (auto-generated by the database)
            if (rowsInserted > 0) {
                try (ResultSet generatedKeys = stmtInsertPreset.getGeneratedKeys()) {
                    if (generatedKeys.next()) {
                        workoutPresetId = generatedKeys.getInt(1); // Get the auto-generated ID for the workout preset
                    }
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        
        return workoutPresetId; // Return the generated workoutPresetId
    }

    // Method to save exercise details for a specific workout preset
    public boolean saveExercise(int workoutPresetId, String exerciseName, String targetMuscles, String description, int sets, int reps, double weight) {
        String sqlInsertExercise = "INSERT INTO exercise (workout_preset_id, name, muscleGroups, description, equipment, difficulty, instructions, sets, reps, weight) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
        
        try (Connection connection = DriverManager.getConnection(DB_URL, DB_USERNAME, DB_PASSWORD);
             PreparedStatement stmtInsertExercise = connection.prepareStatement(sqlInsertExercise)) {
            
            // Set parameters for inserting the exercise details
            stmtInsertExercise.setInt(1, workoutPresetId);   // Link exercise to the workout preset ID
            stmtInsertExercise.setString(2, exerciseName);    // Exercise Name
            stmtInsertExercise.setString(3, targetMuscles);   // Muscle Groups
            stmtInsertExercise.setString(4, description);     // Exercise Description
            stmtInsertExercise.setString(5, "N/A");           // Equipment (Placeholder, you can update this as needed)
            stmtInsertExercise.setInt(6, 1);                   // Difficulty (Placeholder, update accordingly)
            stmtInsertExercise.setString(7, "No instructions"); // Instructions (Placeholder)
            stmtInsertExercise.setInt(8, sets);                // Sets
            stmtInsertExercise.setInt(9, reps);                // Reps
            stmtInsertExercise.setDouble(10, weight);          // Weight
    
            // Execute the exercise insertion
            int rowsInsertedExercise = stmtInsertExercise.executeUpdate();
            return rowsInsertedExercise > 0;
        } catch (SQLException e) {
            e.printStackTrace();
        }
        
        return false; // If something goes wrong, return false
    }
    

     
}
